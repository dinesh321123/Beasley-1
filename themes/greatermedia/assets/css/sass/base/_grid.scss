// global grid variables
$column: golden-ratio(1em, 4) !default;
$gutter: golden-ratio(1em, 1) !default;
$grid-columns: 4 !global;
// this will give us a mobile first approach

// add the visual grid for dev purposes
$visual-grid: true !global;
$visual-grid-color: #6e76ee !global;
$visual-grid-index: front !global;

// max-width for the site
$max-width: em(1400px) !global;
$max-site-width: 1400px;
$live-player: em(250px);

// simple css effect to make images responsive and fluid while also retaining proper aspect ratio
img {
	max-width: 100%;
	@include display(block); // block display will remove additional padding on images
	@include size(null auto); // this will keep images from being stretched at lower resolutions
}

#site-wrap {
	max-width: $max-site-width;
	margin: 0 auto;
	background-color: palette(base,  primary-bg);
}

// The `.page-wrap` class is being used in conjunction with the off-canvas mobile navigation. On click of the
// `.mobile-nav--toggle` button, the contents of `.page-wrap` will be pushed to the left by a particular value. This
.page-wrap {
	@include transform(translate(0, 0));
	width: 100%;
	@include transition(all 500ms ease-in-out);
	overflow: hidden;
}

.container, %container {
	@include outer-container;
}

.main, %main {
	float: left;
	@include span-columns(4);
	background-color: palette(base,  primary-bg);
	@include bp(small) {
		@include span-columns(6);
	}
	@include bp(medium) {
		@include span-columns(6);
		margin-right: 2% !important; // needed so that this will sit beside the live player which is not in the same container
	}
	@include bp(large) {
		@include span-columns(10);
	}
}

.content, %content {
	@include span-columns(4);
	padding: 2em 7.0833333333335%;
	@include bp(small) {
		@include span-columns(6);
	}
	@include bp(medium) {
		@include span-columns(4 of 6);
		@include shift(1);
		padding-right: 0;
		padding-left: 0;
	}
	@include bp(large) {
		@include span-columns(8 of 10);
		@include shift(1);
	}
}

.live-player{
	position: fixed;
	bottom: 0;
	right: 0;
	left: 0;
	@include span-columns(4);
	padding: 1em;
	background-color: palette(base,  secondary-bg);
	color: palette(base,  secondary-text);
	cursor: pointer;
	@include bp(small) {
		@include span-columns(6);
	}
	@include bp(medium){
		position: absolute;
		top: 238px;
		bottom: auto;
		right: 0;
		left: auto;
		@include span-columns(2);
		@include omega;
		//width: 15.878107457899%;
		height: 100%;
		padding: 0;
		color: palette(base,  secondary-text);
		overflow-y: scroll;
		cursor: default;
	}
	@include bp(large) {
		@include span-columns(2);
		@include omega;
	}
	@include bp(x-large) {
		@include calc(right, '50% - 700px');
	}
}

.logged-in .live-player {
	@include media(min-width 782px) {
		top: 270px;
	}
	@include bp(x-large) {
		@include calc(right, '50% - 700px');
	}
}